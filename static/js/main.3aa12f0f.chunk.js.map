{"version":3,"sources":["actions/action-types.ts","services/recipe.service.ts","actions/recipes.actions.ts","components/InputUi.tsx","components/input/Input.tsx","recipe/NewRecipe.tsx","components/remove/Remove.tsx","components/Checkbox.tsx","components/CheckboxLabel.tsx","ingredient/Ingredient.tsx","ingredient/NewIngredient.tsx","recipe/Recipe.tsx","recipe/Recipes.tsx","recipe/RecipeContainer.tsx","App.tsx","reducers/recipes.reducer.ts","serviceWorker.ts","index.tsx"],"names":["ActionTypes","getRecipes","Promise","resolve","JSON","parse","localStorage","getItem","e","clear","storeRecipes","recipes","setItem","stringify","removeRecipe","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","recipe","allRecipes","afterChanges","wrap","_context","prev","next","sent","filter","r","id","abrupt","stop","_x","apply","this","arguments","submitRecipe","_ref2","_callee2","_context2","Date","getTime","concat","toConsumableArray","_x2","updateRecipe","_ref3","_callee3","_context3","map","_x3","success","type","payload","error","fetchRecipes","dispatch","then","GetRecipesOk","catch","GetRecipesError","Error","editRecipe","SaveRecipe","SaveRecipeOk","SaveRecipeError","addRecipe","AddRecipe","AddRecipeOk","deleteRecipe","DeleteRecipe","DeleteRecipeOk","DeleteRecipeError","InputUi","styled","input","_templateObject","Input","onSubmit","_ref$defaultValue","defaultValue","className","inputProps","_ref$clearAfterSubmit","clearAfterSubmit","_ref$autoSave","autoSave","_useState","useState","_useState2","slicedToArray","value","setValue","submit","validateAgainst","length","undefined","inputRef","useRef","memoDebounce","useCallback","debounce","useEffect","react","Container","assign","onChange","target","onKeyPress","key","cancel","Plus","onClick","span","Input_templateObject","div","_templateObject2","NewRecipe","add","Input_Input","name","ingredients","placeholder","Remove","props","Cross","Remove_templateObject","Checkbox","Checkbox_templateObject","CheckboxLabel","CheckboxLabel_templateObject","Ingredient_templateObject","Ingredient","ingredient","onDelete","required","switchRequired","react_default","createElement","Ingredient_Container","Remove_Remove","checked","_onChange","toString","NewIngredient","List","Recipe_templateObject","RecipeNameContainer","Recipe_templateObject2","Recipe","removeElement","ingredientChange","ingredientDelete","ingregient","i","NewIngredient_NewIngredient","push","ing","ingredient_Ingredient","uniqueId","Recipes","edit","remove","Grid","recipe_Recipe","Recipes_templateObject","connect","fetch","_trigger","trigger","Fragment","NewRecipe_NewRecipe","Recipes_Recipes","App","recipe_RecipeContainer","Component","defaultState","pending","recipesReducer","state","action","objectSpread","findIndex","idx","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3aa12f0f.chunk.js","sourcesContent":["import {Action} from 'redux'\nimport {Recipe} from '../interfaces/recipe'\n\nexport enum ActionTypes {\n    GetRecipes = 'GetRecipes',\n    GetRecipesOk = 'GetRecipesOk',\n    GetRecipesError = 'GetRecipesError',\n    AddRecipe = 'AddRecipe',\n    AddRecipeOk = 'AddRecipeOk',\n    AddRecipeError = 'AddRecipeError',\n    SaveRecipe = 'SaveRecipe',\n    SaveRecipeOk = 'SaveRecipeOk',\n    SaveRecipeError = 'SaveRecipeError',\n    DeleteRecipe = 'DeleteRecipe',\n    DeleteRecipeOk = 'DeleteRecipeOk',\n    DeleteRecipeError = 'DeleteRecipeError',\n}\n\nexport interface GetRecipes extends Action {\n    type: typeof ActionTypes.GetRecipes\n}\n\nexport interface GetRecipesOk extends Action {\n    type: typeof ActionTypes.GetRecipesOk\n    payload: Recipe[]\n}\n\nexport interface SaveRecipe extends Action {\n    type: typeof ActionTypes.SaveRecipe,\n    payload: Recipe\n}\n\nexport interface AddRecipe extends Action {\n    type: typeof ActionTypes.AddRecipe,\n    payload: Recipe\n}\n\nexport interface DeleteRecipe extends Action {\n    type: typeof ActionTypes.DeleteRecipe\n    payload: Recipe\n}\n\nexport interface SuccessAction extends Action {\n    type: ActionSuccessType\n    payload: string\n}\n\nexport interface ErrorAction extends Action {\n    type: ActionErrorType\n    payload: Error\n}\n\nexport type ActionErrorType =\n    | ActionTypes.GetRecipesError\n    | ActionTypes.SaveRecipeError\n    | ActionTypes.DeleteRecipeError\n    | ActionTypes.AddRecipeError\n\nexport type ActionSuccessType =\n    | typeof ActionTypes.SaveRecipeOk\n    | typeof ActionTypes.DeleteRecipeOk\n    | typeof ActionTypes.AddRecipeOk\n\nexport type RecipeActions =\n    | GetRecipes\n    | GetRecipesOk\n    | SaveRecipe\n    | AddRecipe\n    | DeleteRecipe\n    | SuccessAction\n    | ErrorAction\n\nexport type NotificationActions =\n    | SuccessAction\n    | ErrorAction\n","import {Recipe} from '../interfaces/recipe'\n\nconst RECIPES_KEY = 'recipes'\n\nexport const getRecipes = (): Promise<Recipe[]> => {\n    try {\n        return Promise.resolve(JSON.parse(localStorage.getItem(RECIPES_KEY) || '[]'))\n    } catch (e) {\n        localStorage.clear()\n        return Promise.resolve([])\n    }\n}\n\nexport const storeRecipes = (recipes: Recipe[]): Promise<boolean> => {\n    try {\n        localStorage.setItem(RECIPES_KEY, JSON.stringify(recipes))\n        return Promise.resolve(true)\n    } catch (e) {\n        return Promise.resolve(false)\n    }\n}\n\n// design decision: we could pass all Recipe[] from Store but we 'mimic' the real API. Obviously it is slower (parse+get)\nexport const removeRecipe = async (recipe: Recipe): Promise<boolean> => {\n    const allRecipes = await getRecipes()\n    const afterChanges = allRecipes.filter(r => r.id !== recipe.id)\n    await storeRecipes(afterChanges)\n    return true\n}\n\nexport const submitRecipe = async (recipe: Recipe): Promise<Recipe> => {\n    recipe.id = new Date().getTime()\n    const allRecipes = await getRecipes()\n    await storeRecipes([recipe, ...allRecipes])\n    return recipe\n}\n\nexport const updateRecipe = async (recipe: Recipe): Promise<Recipe> => {\n    const allRecipes = await getRecipes()\n    await storeRecipes(allRecipes.map(r => r.id === recipe.id ? recipe : r))\n    return recipe\n}\n","import {ThunkDispatch} from 'redux-thunk'\nimport {Recipe} from '../interfaces/recipe'\nimport {ThunkResult} from '../interfaces/thunk'\nimport {RootState} from '../reducers'\nimport {getRecipes, removeRecipe, submitRecipe, updateRecipe} from '../services/recipe.service'\nimport {\n    ActionErrorType,\n    ActionSuccessType,\n    ActionTypes,\n    AddRecipe,\n    DeleteRecipe,\n    ErrorAction,\n    GetRecipesOk,\n    RecipeActions,\n    SaveRecipe,\n    SuccessAction\n} from './action-types'\n\nconst recipesFetched = (payload: Recipe[]): GetRecipesOk => ({\n    type: ActionTypes.GetRecipesOk,\n    payload\n})\n\nconst recipeAdded = (payload: Recipe): AddRecipe => ({\n    type: ActionTypes.AddRecipe,\n    payload,\n})\n\nconst recipeSaved = (payload: Recipe): SaveRecipe => ({\n    type: ActionTypes.SaveRecipe,\n    payload,\n})\n\nconst recipeDeleted = (payload: Recipe): DeleteRecipe => ({\n    type: ActionTypes.DeleteRecipe,\n    payload,\n})\n\nconst success = (type: ActionSuccessType, payload: string): SuccessAction => ({\n    type, payload\n})\n\nconst error = (type: ActionErrorType, payload: Error): ErrorAction => ({\n    type, payload,\n})\n\nexport const fetchRecipes = (): ThunkResult<Promise<RecipeActions>> => (\n    (dispatch: ThunkDispatch<RootState, {}, RecipeActions>) => (\n        getRecipes()\n            .then(r => dispatch(recipesFetched(r)))\n            .catch(() => dispatch(error(ActionTypes.GetRecipesError, new Error('Could not get the recipes.'))))\n    )\n)\n\nexport const editRecipe = (recipe: Recipe): ThunkResult<Promise<RecipeActions>> => (\n    (dispatch: ThunkDispatch<RootState, {}, RecipeActions>) => {\n        return updateRecipe(recipe)\n            .then(() => dispatch(recipeSaved(recipe)))\n            .then(() => dispatch(success(ActionTypes.SaveRecipeOk, 'Recipe saved.')))\n            .catch(() => dispatch(error(ActionTypes.SaveRecipeError, new Error('Could not save the recipe.'))))\n    }\n)\n\nexport const addRecipe = (recipe: Recipe): ThunkResult<Promise<RecipeActions>> => (\n    (dispatch: ThunkDispatch<RootState, {}, RecipeActions>) => {\n        return submitRecipe(recipe)\n            .then(r => dispatch(recipeAdded(r)))\n            .then(() => dispatch(success(ActionTypes.AddRecipeOk, 'Recipe added.')))\n            .catch(() => dispatch(error(ActionTypes.SaveRecipeError, new Error('Could not save the recipe.'))))\n    }\n)\n\nexport const deleteRecipe = (recipe: Recipe): ThunkResult<Promise<RecipeActions>> => (\n    (dispatch: ThunkDispatch<RootState, {}, RecipeActions>) => {\n        return removeRecipe(recipe)\n            .then(() => dispatch(recipeDeleted(recipe)))\n            .then(() => dispatch(success(ActionTypes.DeleteRecipeOk, 'Recipe removed.')))\n            .catch(() => dispatch(error(ActionTypes.DeleteRecipeError, new Error('Could not remove the recipe.'))))\n    }\n)\n","import styled from 'styled-components'\n\nexport const InputUi = styled.input`\n    width: 200px;\n    height: 1rem;\n    color: #455A64;\n    border-radius: 0.4rem;\n    padding: 0.3rem 1rem;\n    transition: box-shadow 400ms;\n    outline: none;\n    \n    &:hover {\n      box-shadow: 0.5rem 0.5rem 1.5rem;\n    }\n    \n    &::placeholder {\n      color: #B0BEC5;\n    }\n`\n","import {debounce} from 'lodash-es'\nimport * as React from 'react'\nimport {useCallback, useEffect, useRef, useState} from 'react'\nimport styled from 'styled-components'\nimport {InputUi} from '../InputUi'\n\ninterface Props {\n    inputProps?: React.PropsWithoutRef<JSX.IntrinsicElements['input']> //https://github.com/sw-yx/react-typescript-cheatsheet#useful-react-prop-type-examples\n    autoSave?: boolean\n    clearAfterSubmit?: boolean\n    defaultValue?: string\n    onSubmit: (value: string) => any\n    className?: string\n}\n\nexport const Input: React.FunctionComponent<Props> = ({onSubmit, defaultValue = '', className, inputProps, clearAfterSubmit = false, autoSave = false}) => {\n    const [value, setValue] = useState(defaultValue)\n    const submit = (debouncedVal: string = '') => {\n        // debounce + useCallback memoizes the value as well\n        const validateAgainst = debouncedVal || value\n        if (validateAgainst === '') {\n            return\n        }\n        onSubmit(validateAgainst)\n        if (clearAfterSubmit) {\n            setValue('')\n        }\n    }\n\n    const inputRef = useRef(null)\n    const memoDebounce = useCallback(debounce(submit, 2000), [inputRef])\n\n    useEffect(() => {\n        if (!autoSave || value === defaultValue) {   // prevent first trigger after initial render\n            return\n        }\n        memoDebounce(value)\n    }, [value, autoSave])\n\n    const localChange = (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value)\n\n    const enterPressed = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            submit()\n            memoDebounce.cancel()\n        }\n    }\n\n    return (\n        <Container>\n            <InputUi\n                {...inputProps}\n                onChange={localChange}\n                value={value}\n                onKeyPress={enterPressed}\n                className={className}/>\n            {!autoSave && <Plus onClick={() => submit()}>➕</Plus>}\n        </Container>\n    )\n}\n\n\nconst Plus = styled.span`\n  font-size: 1.3rem;\n  color: transparent;\n  text-shadow: 0 0 0 white;\n  vertical-align: middle;\n  padding-left: 10px;\n  cursor: pointer;\n  \n  &:hover {\n    text-shadow: 0 0 0 forestgreen;\n  }\n`\n\nconst Container = styled.div`\n  display: inline;\n`\n","import * as React from 'react'\nimport {Input} from '../components/input/Input'\nimport {Recipe} from '../interfaces/recipe'\n\ninterface Props {\n    add: (recipe: Recipe) => any\n}\n\nexport const NewRecipe: React.FunctionComponent<Props> = ({add}) => <Input\n    onSubmit={(name: string) => add({name, ingredients: []} as any as Recipe)} clearAfterSubmit\n    inputProps={{\n        placeholder: 'New recipe...'\n    }}/>\n\n","import * as React from 'react'\nimport {HTMLAttributes} from 'react'\nimport styled from 'styled-components'\n\nexport const Remove: React.FunctionComponent<HTMLAttributes<HTMLSpanElement>> = (props) => (\n    <Cross {...props}>❌</Cross>\n    /*\n     <Image src={deleteIcon} alt={'Remove'} {...props} width={32} height={32}/>\n     */\n)\n\nconst Cross = styled.span`\n    cursor: pointer;\n    padding: 10px;\n    vertical-align: super;\n    color: transparent;\n    text-shadow:  0 0 0 white;\n    \n    &:hover {\n      text-shadow: 0 0 0 red;\n    }\n`\n","import styled from 'styled-components'\n\nexport const Checkbox = styled.input`\n  cursor: pointer;\n  transition: box-shadow 400ms;\n  \n  &:checked {\n    color: black;\n  }\n  \n  &:hover {\n      box-shadow: 0 0 18px 0 rgba(0,0,0,0.75);\n  }\n`\n\n","import styled from 'styled-components'\n\nexport const CheckboxLabel = styled.span`\n  font-size: 0.7rem;\n  color: white;\n`\n","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {Checkbox, CheckboxLabel} from '../components'\nimport {Input} from '../components/input/Input'\nimport {Remove} from '../components/remove/Remove'\nimport {Ingredient as IngredientProps} from '../interfaces/ingredient'\n\ninterface Props {\n    ingredient: IngredientProps\n    onChange: (ingredient: IngredientProps) => any\n    onDelete: (ingredient: IngredientProps) => any\n}\n\nconst Ingredient: React.FunctionComponent<Props> = ({ingredient, onChange, onDelete}) => {\n    const [required, switchRequired] = useState(ingredient.required)\n\n    return (\n        // div, otherwise applies flex from parent\n        <div>\n            <Container>\n                <Input\n                    defaultValue={ingredient.name}\n                    autoSave\n                    onSubmit={(value) => {\n                        ingredient.name = value\n                        onChange(ingredient)\n                    }}\n                    inputProps={{\n                        placeholder: 'Ingredient name...',\n                    }}\n                />\n                <Remove onClick={() => onDelete(ingredient)}/>\n            </Container>\n\n            <Checkbox type='checkbox' checked={required} onChange={(e) => {\n                switchRequired(e.target.checked)\n                ingredient.required = e.target.checked\n                onChange(ingredient)\n            }}/>\n            <CheckboxLabel>Required?</CheckboxLabel>\n        </div>\n    )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\n\nexport default Ingredient\n","import * as React from 'react'\nimport {Input} from '../components/input/Input'\nimport {Ingredient} from '../interfaces/ingredient'\n\ninterface Props {\n    add: (ingredient: Ingredient) => any\n}\n\nexport const NewIngredient: React.FunctionComponent<Props> = ({add}) => <Input\n    onSubmit={(name: string) => add({name} as Ingredient)} clearAfterSubmit\n    inputProps={{\n        placeholder: 'Type new ingredient name...'\n    }}\n/>\n\n","import {uniqueId} from 'lodash-es'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {Input} from '../components/input/Input'\nimport Ingredient from '../ingredient/Ingredient'\nimport {NewIngredient} from '../ingredient/NewIngredient'\nimport {Ingredient as IngredientType} from '../interfaces/ingredient'\nimport {Recipe as RecipeProps} from '../interfaces/recipe'\n\ninterface Props {\n    recipe: RecipeProps\n    onChange: (recipe: RecipeProps) => any\n    removeElement?: React.ReactNode\n}\n\nconst Recipe: React.FunctionComponent<Props> = ({onChange, recipe, removeElement}) => {\n    const ingredientChange = () => {\n        onChange(recipe)\n    }\n    const ingredientAdded = (ingredient: IngredientType) => {\n        recipe.ingredients.push(ingredient)\n        onChange(recipe)\n    }\n    const ingredientDelete = (ingregient: IngredientType) => {\n        recipe.ingredients = recipe.ingredients.filter(i => i.id !== ingregient.id)\n        onChange(recipe)\n    }\n\n    const onSubmit = (value: string) => {\n        recipe.name = value\n        onChange(recipe)\n    }\n\n    return (\n        <div>\n            <RecipeNameContainer>\n                <Input onSubmit={onSubmit} defaultValue={recipe.name} autoSave/>\n                {removeElement}\n            </RecipeNameContainer>\n            <List>\n                <NewIngredient add={ingredientAdded}/>\n                {recipe.ingredients.map((ing) =>\n                    <Ingredient key={uniqueId(ing.name)}\n                                ingredient={ing}\n                                onChange={ingredientChange}\n                                onDelete={ingredientDelete}\n                    />)}\n            </List>\n        </div>\n    )\n}\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 0 30px 30px;\n`\n\nconst RecipeNameContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport default Recipe\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Remove} from '../components/remove/Remove'\nimport {Recipe as RecipeType} from '../interfaces/recipe'\nimport {media} from '../utils/media'\nimport Recipe from './Recipe'\n\ninterface Props {\n    recipes: RecipeType[]\n    edit: (recipe: RecipeType) => any\n    remove: (recipe: RecipeType) => any\n}\n\nexport const Recipes: React.FunctionComponent<Props> = ({recipes, edit, remove}) => (\n    <Grid>\n        {\n            recipes.map(r =>\n                <Recipe key={r.id}\n                        recipe={r}\n                        onChange={edit}\n                        removeElement={<Remove onClick={() => remove(r)}/>}/>\n            )\n        }\n    </Grid>\n)\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 310px);\n  grid-gap: 30px;\n  justify-content: center;\n`\n","import React, {FunctionComponent, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {addRecipe, deleteRecipe, editRecipe, fetchRecipes} from '../actions/recipes.actions'\nimport {Recipe as RecipeType} from '../interfaces/recipe'\nimport {AppThunkDispatch} from '../interfaces/thunk'\nimport {RootState} from '../reducers'\nimport {NewRecipe} from './NewRecipe'\nimport {Recipes} from './Recipes'\n\ninterface StateProps {\n    recipes: RecipeType[]\n}\n\ninterface DispatchProps {\n    fetch: () => any\n    add: (recipe: RecipeType) => any\n    edit: (recipe: RecipeType) => any\n    remove: (recipe: RecipeType) => any\n}\n\nconst RecipeContainer: FunctionComponent<StateProps & DispatchProps> = ({recipes, fetch, edit, remove, add}) => {\n    useEffect(() => {\n        async function trigger() {\n            await fetch()\n        }\n\n        trigger()\n    }, [])\n    return (\n        <>\n            <h1>New Recipe:</h1>\n            <NewRecipe add={add}/>\n            <h1>Collection of Recipes:</h1>\n            <Recipes edit={edit} remove={remove} recipes={recipes}/>\n        </>\n    )\n}\n\n\nconst mapStateToProps = ({recipes: {recipes}}: RootState): StateProps => ({\n    recipes,\n})\n\nconst mapDispatchToProps = (dispatch: AppThunkDispatch) => ({\n    fetch: () => dispatch(fetchRecipes()),\n    edit: (recipe: RecipeType) => dispatch(editRecipe(recipe)),\n    add: (recipe: RecipeType) => dispatch(addRecipe(recipe)),\n    remove: (recipe: RecipeType) => dispatch(deleteRecipe(recipe)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeContainer)\n","import React, {Component} from 'react'\nimport RecipeContainer from './recipe/RecipeContainer'\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <ul>\n                    <li>New items require pressing enter or clicking on plus sign to be added.</li>\n                    <li>Editing existing items has 'autosave' (with debounce) feature</li>\n                </ul>\n                <RecipeContainer/>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import {ActionTypes, RecipeActions} from '../actions/action-types'\nimport {Recipe} from '../interfaces/recipe'\n\nexport interface RecipesState {\n    recipes: Array<Recipe>\n    pending: boolean\n    error?: Error\n}\n\nexport const defaultState: RecipesState = {\n    recipes: [],\n    pending: false,\n}\n\nconst recipesReducer = (state: RecipesState = defaultState, action: RecipeActions): RecipesState => {\n    switch (action.type) {\n        case ActionTypes.GetRecipesOk:\n            return {...state, recipes: action.payload}\n        case ActionTypes.DeleteRecipe:\n            return {...state, recipes: state.recipes.filter(r => r.id !== action.payload.id)}\n        case ActionTypes.AddRecipe:\n            return {...state, recipes: [action.payload, ...state.recipes]}\n        case ActionTypes.SaveRecipe: {\n            const i = state.recipes.findIndex(r => r.id === action.payload.id)\n            return {\n                ...state, recipes: state.recipes.map((r, idx) => idx === i ? action.payload : r)\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default recipesReducer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and recipe)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport App from './App'\nimport './index.css'\nimport {RootState} from './reducers'\nimport recipesReducer from './reducers/recipes.reducer'\nimport * as serviceWorker from './serviceWorker'\n\nconst rootReducer = combineReducers<RootState>({\n    recipes: recipesReducer\n})\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\n\nReactDOM.render(\n    <Provider store={store}><App/></Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}